function bind(e,t,n){n.target=e,n.targetPath=t;var i=n.source=n.source||e,r=n["<-"]||n["<->"]||"",a=n.twoWay="<->"in n;n.sourcePath=r,n.value;var s=n.parameters=n.parameters||i,o=n.document,l=n.components,c=n.trace,u=n.sourceScope=new Scope(i);u.parameters=s,u.document=o,u.components=l;var h=n.targetScope=new Scope(e);if(h.parameters=s,h.document=o,h.components=l,n.converter){var d=n.converter;d.convert&&(n.convert=d.convert.bind(d)),d.revert&&(n.revert=d.revert.bind(d))}else if(n.reverter){var p=n.reverter;p.convert&&(n.revert=p.convert.bind(p)),p.revert&&(n.convert=p.revert.bind(p))}var m=n.convert,g=n.revert,f=n.sourceSyntax=parse(r),v=n.targetSyntax=parse(t);c&&console.log("DEFINE BINDING",t,"<-",r,e);var _=bindOneWay(h,v,u,f,m,n,c),y=noop;return a&&(c&&console.log("DEFINE BINDING",t,"->",r,i),y=bindOneWay(u,f,h,v,g,n,c)),function(){_(),y()}}function bindOneWay(e,t,n,i,r,a,s){var o=solve(t,i);t=o[0],i=o[1];var l=compileObserver(i);r&&(l=Observers.makeConverterObserver(l,r,n));var c=compileBinder(t);return c(l,n,e,a,s?{sourcePath:stringify(i),targetPath:stringify(t)}:null)}function noop(){}var parse=require("./parse"),solve=require("./algebra"),stringify=require("./stringify"),compileObserver=require("./compile-observer"),compileBinder=require("./compile-binder"),Observers=require("./observers"),Scope=require("./scope");module.exports=bind;